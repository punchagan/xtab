// generated by Aftershave 0.6.10
(function() {
    'use strict';

    var Aftershave = {};
    Aftershave.templates = {};
    Aftershave.render = function(name, args) {
        if (Aftershave.templates[name]) {
            return Aftershave.templates[name].call(Aftershave, args || {});
        }
        return '';
    };

    Aftershave.templates.popup = function(args) {
        var _t = '<h1>xTab</h1><form> ';
        if (args.algo != 'memory') {
            _t += ' <h2>Maximum Tabs:</h2><select id="max" name="max"> ';
            var hasMatch;
            var match;
            for (var key in args.options) {
                match = args.max == key;
                if (match) {
                    hasMatch = true;
                }

                _t += ' <option value="' + key + '"';
                if (match) {
                    _t += ' selected';
                }

                _t += '>' + args.options[key] + '</option> ';
            }

            _t += ' <option value="other"';
            if (!hasMatch) {
                _t += ' selected';
            }

            _t += '>Other...</option></select><input type="number" name="max" id="input-max"';
            if (!hasMatch) {
                _t += ' style="display: block;" value="' + args.max + '"';
            }

            _t += '> ';
        }

        if (args.algo == 'memory') {
            var memory;
            _t += ' <h2>Maximum Memory: (MB)</h2> ';
            memory = args.memory || 1500;
            _t += ' <input type="number" name="memory" id="input-memory" value=' + memory + ' min="1000" max="16000"> ';
        }

        _t += ' <h2>Destroy:</h2><label><input type="radio" name="algo" value="used"';
        if (args.algo == 'used') {
            _t += ' checked';
        }

        _t += '>Least recently used</label><label><input type="radio" name="algo" value="accessed"';
        if (args.algo == 'accessed') {
            _t += ' checked';
        }

        _t += '>Least accessed</label><label><input type="radio" name="algo" value="oldest"';
        if (args.algo == 'oldest') {
            _t += ' checked';
        }

        _t += '>Oldest</label><label><input type="radio" name="algo" value="memory"';
        if (args.algo == 'memory') {
            _t += ' checked';
        }

        _t += '>Memory Heuristic</label></form><a href="#" id="open-listing">Show closed tabs</a>';
        return _t;
    };

    Aftershave.templates.listing = function(args) {
        var _t = '<h1>Closed Tabs</h1><ul> ';
        for (var i=0; i < args.removed_tabs.length; i ++) {
            var tab = args.removed_tabs[i];
            _t += ' <li><a href=' + tab.url + ' target="_blank">' + tab.title + '</a> ' + new Date(tab.timestamp).toString() + ' </li> ';
        }

        _t += '</ul>';
        return _t;
    };

    if (typeof module !== 'undefined' && module.exports) {
        module.exports = Aftershave;
    }
    else {
        window.Aftershave = Aftershave;
    }
} ());